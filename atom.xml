<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jgduan.github.io/</id>
    <title>Zihao&apos;s blog</title>
    <updated>2021-03-01T02:52:55.026Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jgduan.github.io/"/>
    <link rel="self" href="https://jgduan.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://jgduan.github.io/images/avatar.png</logo>
    <icon>https://jgduan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Zihao&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[【JJQ】Android开发规范（注释、命名、打包）]]></title>
        <id>https://jgduan.github.io/post/jjq-android-kai-fa-gui-fan-zhu-shi-ming-ming-da-bao/</id>
        <link href="https://jgduan.github.io/post/jjq-android-kai-fa-gui-fan-zhu-shi-ming-ming-da-bao/">
        </link>
        <updated>2021-02-26T03:15:52.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p><strong>统一、规范的命名有助于提升项目协作效率，也让代码的可读性、可维护性变得更加友好。</strong><br>
这里根据<a href="http://www.360sdn.com/2013/android_0517/144.html?ckvcbc=yz6j13"><strong>Google Android编程规范</strong></a>来对公司客户端研发输出一份相对全面、清晰的Android代码命名规范，如有异议，欢迎批评指正。</p>
<hr>
<h1 id="关于注释">关于注释</h1>
<p>在开发过程中，类、生僻对象命名、方法原则上都要加上相关注释，说明含义、用途。</p>
<hr>
<h1 id="各对象暂定的命名规范">各对象暂定的命名规范</h1>
<ul>
<li><strong>项目名称(Project name)</strong>
<ul>
<li>命名规则：<code>大驼峰式命名</code>，单词间连续无间隔；</li>
<li>示例：如新建一个名为BaiYaoWanJia的项目。</li>
</ul>
</li>
<li><strong>模块命名(Module-Library name)</strong>
<ul>
<li>命名规则：Library name采用<code>大驼峰式命名</code>，单词间连续无间隔，Module name会自动生成，不需修改；</li>
<li>示例：<br>
<img src="https://jgduan.github.io//post-images/1614309587721.png" alt="" loading="lazy"></li>
</ul>
</li>
<li><strong>包</strong>
<ul>
<li>命名规则：小写、单词间连续无间隔，3级包名一般为applicationId或Module的根目录，4级包名对应不同的细分模块。</li>
<li>示例：
<ul>
<li>3级包名applicationId：一般为com.公司名.项目名，如com.dohenes.bywanjia 或 com.公司名.Module name，如com.dohenes.shop；</li>
<li>4级包名：com.公司名.项目名/Module name.xxx，具体可参考下图<br>
<img src="https://jgduan.github.io//post-images/1614309652905.png" alt="" loading="lazy"></li>
</ul>
</li>
</ul>
</li>
<li><strong>类</strong>
<ul>
<li>命名规则：<code>大驼峰式命名</code>，可使用单词或者单词简写，在具体命名类时，会根据该类的类型不同而附加额外的命名规则；</li>
<li>示例：  <table>
  	  <tr>
  		  <th>类目</th>
  		  <th>类型</th>
  		  <th>命名规则描述</th>
  		  <th>命名示例</th>
  	  </tr>
  	  <tr>
  		  <th>普通java类</th>
  		  <th>java类</th>
  		  <th>大驼峰式命名法</th>
  		  <th>GetTime</th>
  	  </tr>
  	  <tr>
  		  <th rowspan="15">Android相关</th>
  		  <th>基类</th>
  		  <th>Base + 类别 / 功能</th>
  		  <th>BaseActivity / BaseFragment / BaseAdapter</th>
  	  </tr>
  	  <tr>
  		  <th>Activity</th>
  		  <th>模块名 + Activity</th>
  		  <th>LoginActivity</th>
  	  </tr>
  	  <tr>
  		  <th>Fragment</th>
  		  <th>模块名 + Fragment</th>
  		  <th>LoginFragment</th>
  	  </tr>
  	  <tr>
  		  <th>BroadcastReceiver</th>
  		  <th>功能名 + Receiver</th>
  		  <th>BootBroadcastReceiver</th>
  	  </tr>
  	  <tr>
  		  <th>Service</th>
  		  <th>模块名 / 功能名 + Service</th>
  		  <th>LoginService / BLEService</th>
  	  </tr>
  	  <tr>
  		  <th>自定义对话框Dialog</th>
  		  <th>功能名 + Dialog</th>
  		  <th>TipsDialog</th>
  	  </tr>
  	  <tr>
  		  <th>自定义View</th>
  		  <th>Custom + 功能名 + 组件名称(继承的组件名)</th>
  		  <th>CustomToast / CustomLayout</th>
  	  </tr>
  	  <tr>
  		  <th>自定义Widget</th>
  		  <th>功能名 + Widget</th>
  		  <th>LoginWidget</th>
  	  </tr>  
  	  <tr>
  		  <th>数据适配器类</th>
  		  <th>功能名 + Adapter</th>
  		  <th>WeatherAdapter</th>
  	  </tr>  
  	  <tr>
  		  <th>工具类</th>
  		  <th>功能名 + Util/Manager</th>
  		  <th>StringUtil / DatabaseManager</th>
  	  </tr>  
  	  <tr>
  		  <th>帮助类</th>
  		  <th>功能名 + Helper</th>
  		  <th>DBHelper</th>
  	  </tr>  
  	  <tr>
  		  <th>解析类</th>
  		  <th>功能名 + Parse</th>
  		  <th>GsonParse</th>
  	  </tr>   
  	  <tr>
  		  <th>异常类</th>
  		  <th>以Exception结尾</th>
  		  <th>LoginException</th>
  	  </tr>   
  	  <tr>
  		  <th>接口</th>
  		  <th>多以able或ible结尾，也可在类名前加I标明</th>
  		  <th>Runnable / Accessible / ILogin</th>
  	  </tr>   
  	  <tr>
  		  <th>回调</th>
  		  <th>功能名 + Callback</th>
  		  <th>LoginCallback</th>
  	  </tr>   
     </table>
</li>
</ul>
</li>
<li><strong>变量</strong>
<ul>
<li>命名规则：<code>小驼峰式命名</code>，在具体命名变量时，会根据该变量的类型不同而附加额外的命名规则；</li>
<li>示例：  <table>
  	  <tr>
  		  <th>类型</th>
  		  <th>命名规则描述</th>
  		  <th>命名示例</th>
  	  </tr>
  	  <tr>
  		  <th>变量</th>
  		  <th>m + 单词名</th>
  		  <th>private int mCount</th>
  	  </tr>
  	  <tr>
  		  <th>静态变量</th>
  		  <th>前缀添加s</th>
  		  <th>private static int sCount</th>
  	  </tr>
  	  <tr>
  		  <th>临时变量(代码块内的)</th>
  		  <th>小驼峰式命名</th>
  		  <th>int count</th>
  	  </tr>
  	  <tr>
  		  <th>常量</th>
  		  <th>CONSTANT_作用名</th>
  		  <th>CONSTANT_KEY_NAME</th>
  	  </tr>
  	  <tr>
  		  <th>Android UI控件</th>
  		  <th>m + 控件缩写 + 功能描述</th>
  		  <th>mTvTitle / mBtnLogin</th>
  	  </tr>
  </table>
</li>
</ul>
</li>
<li><strong>方法</strong>
<ul>
<li>命名规则：<code>小驼峰式命名</code>,在具体命名方法名时，会根据该方法名的作用不同而附加额外的命名规则；</li>
<li>示例：  <table>
  	  <tr>
  		  <th>功能</th>
  		  <th>命名规则描述</th>
  		  <th>命名示例</th>
  	  </tr>
  	  <tr>
  		  <th>初始化</th>
  		  <th>init + 单词</th>
  		  <th>初始化布局：initView()</th>
  	  </tr>
  	  <tr>
  		  <th>判断 / 校验，返回至为boolean</th>
  		  <th>is + 单词 / check + 单词</th>
  		  <th>可见性：isVisible() / checkKey()</th>
  	  </tr>
  	  <tr>
  		  <th>显示/弹出提示框</th>
  		  <th>show + 单词</th>
  		  <th>显示提示信息：showTips()</th>
  	  </tr>
  	  <tr>
  		  <th>重置数据</th>
  		  <th>reset + 单词</th>
  		  <th>重置用户数据：resetUserData()</th>
  	  </tr>
  	  <tr>
  		  <th>保存数据</th>
  		  <th>save + 单词</th>
  		  <th>保存用户名：saveUserName()</th>
  	  </tr>
  	  <tr>
  		  <th>获取数据</th>
  		  <th>get + 单词</th>
  		  <th>获取用户名：getUserName()</th>
  	  </tr>
  	  <tr>
  		  <th>清除数据</th>
  		  <th>clear + 单词</th>
  		  <th>清除用户名:clearUserName()</th>
  	  </tr>
  	  <tr>
  		  <th>移除数据</th>
  		  <th>remove + 单词</th>
  		  <th>移除用户数据:removeUserData()</th>
  	  </tr>
  	  <tr>
  		  <th>绘制相关</th>
  		  <th>draw + 单词</th>
  		  <th>绘制线条:drawLine()</th>
  	  </tr>
  </table>
</li>
</ul>
</li>
<li><strong>参数</strong>
<ul>
<li>命名规则：<code>小驼峰式命名</code>；</li>
<li>示例：如userName,phoneNumber等。</li>
</ul>
</li>
<li><strong>资源</strong>
<ul>
<li>布局资源(布局文件单词都要小写，中间用下划线_隔开)  <table>
      <tr>
          <th>类型</th>
          <th>命名规则描述</th>
          <th>命名示例</th>
      </tr>
      <tr>
          <th>activity布局</th>
          <th>activity_单词</th>
          <th>activity_main</th>
      </tr>
      <tr>
          <th>fragment布局</th>
          <th>fragment_单词</th>
          <th>fragment_main</th>
      </tr>
      <tr>
          <th>dialog布局</th>
          <th>dialog_单词</th>
          <th>dialog_tips</th>
      </tr>
      <tr>
          <th>popupwindow布局</th>
          <th>pw_单词</th>
          <th>pw_net_error</th>
      </tr>
      <tr>
          <th>列表子项布局</th>
          <th>item_单词</th>
          <th>item_message</th>
      </tr>
  </table>
</li>
<li>控件ID  <table>
      <tr>
          <th>类型</th>
          <th>命名规则描述</th>
          <th>命名示例</th>
      </tr>
      <tr>
          <th>TextView</th>
          <th rowspan="11">模块名_控件缩写_功能单词名</th>
          <th>login_tv_title</th>
      </tr>
      <tr>
          <th>EditTextView</th>
          <th>login_et_userName</th>
      </tr>
      <tr>
          <th>ImageView</th>
          <th>login_iv_userHead</th>
      </tr>
      <tr>
          <th>Button</th>
          <th>login_btn</th>
      </tr>
      <tr>
          <th>CheckBox</th>
          <th>login_cb_status</th>
      </tr>
      <tr>
          <th>RadioButton</th>
          <th>login_rb_gender</th>
      </tr>
      <tr>
          <th>ListView</th>
          <th>main_lv_message</th>
      </tr>
      <tr>
          <th>GridView</th>
          <th>main_gv_cards</th>
      </tr>
      <tr>
          <th>LinearLayout</th>
          <th>login_lt_header</th>
      </tr>
      <tr>
          <th>RelativeLayout</th>
          <th>login_rl_header</th>
      </tr>
      <tr>
          <th>FragmentLayout / TableLayout / ConstraintLayout</th>
          <th>简写对应 fl / tl / cl</th>
      </tr>
  </table>
</li>
<li>图片资源  <table>
      <tr>
          <th>类目</th>
          <th>类型</th>
          <th>命名规则描述</th>
          <th>命名示例</th>
      </tr>
      <tr>
          <th rowspan = "10">Drawable / mipmap资源</th>
          <th>普通图标</th>
          <th>ic_具体模块_功能</th>
          <th>R.drawable.ic_user_login / R.drawable.ic_launcher</th>
      </tr>
      <tr>
          <th>背景资源</th>
          <th>bg_具体模块_功能</th>
          <th>R.drawable.bg_login</th>
      </tr>
      <tr>
          <th>样式选择器(selector)</th>
          <th>selector_具体模块_适用范围</th>
          <th>R.drawable.selector_login_btn</th>
      </tr>
      <tr>
          <th>样式形状(shape)</th>
          <th>shape_具体模块_适用范围</th>
          <th>R.drawable.shape_login_btn</th>
      </tr>
  </table>
</li>
<li>动画资源  <table>
      <tr>
          <th>类型</th>
          <th>命名规则描述</th>
          <th>命名示例</th>
      </tr>
      <tr>
          <th>补间动画</th>
          <th>动画类型_方向</th>
          <th>淡入：fade_int；淡出：fade_out</th>
      </tr>
      <tr>
          <th>其余动画</th>
          <th>模块名_动画名</th>
          <th>login_jump</th>
      </tr>
  </table>
</li>
<li>Values资源  <table>
      <tr>
          <th>类型</th>
          <th>命名规则描述</th>
          <th>命名示例</th>
      </tr>
      <tr>
          <th>color</th>
          <th>模块名_color</th>
          <th>login_color</th>
      </tr>
      <tr>
          <th>style</th>
          <th>模块名_style</th>
          <th>login_style</th>
      </tr>
      <tr>
          <th>theme</th>
          <th>模块名_theme</th>
          <th>login_theme</th>
      </tr>
      <tr>
          <th>string</th>
          <th>模块名_作用名</th>
          <th>user_name</th>
      </tr>
  </table>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="关于app打包命名">关于App打包命名</h1>
<p>release版本在项目混淆、加固(目前采用360加固)的基础上，按照以下规范命名，其它情况不考虑：<br>
<a href="https://www.jianshu.com/p/d7dc4624a122"><strong>【Android】apk打包命名规则交流篇</strong></a></p>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Android】如何打包aar]]></title>
        <id>https://jgduan.github.io/post/android-ru-he-da-bao-aar/</id>
        <link href="https://jgduan.github.io/post/android-ru-he-da-bao-aar/">
        </link>
        <updated>2021-02-19T01:37:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1>
<ol>
<li><strong>主项目需要依赖aar中所依赖的远程项目，否则会报错，如果依赖的某个库的版本有冲突，需要协调解决；</strong></li>
<li><strong>资源命名要遵守统一规范，最好是添加 项目名 / Module名 为前缀做区分，以免与主项目的资源重复，避免资源名称重复引发不必要的异常；</strong></li>
<li><strong>如果aar包中使用了分享、统计分析、支付等第三方SDK，在主项目中需要使用的话，我们需要以主项目的ApplicationId去申请对应的appKey与appId。如果需要在aar项目中独立调试的话，那就需要修改包名与ApplicationId后才能正常使用。</strong></li>
</ol>
<hr>
<h1 id="一-原项目打包aar">一、原项目打包aar</h1>
<ol>
<li>
<p><strong>先修改项目为Library</strong><br>
需要把<code>Module</code>下的<code>build.gradle</code>中的<code>apply plugin: 'com.android.application'</code>修改为<code>apply plugin: 'com.android.library'</code></p>
</li>
<li>
<p><strong>注释build.gradle文件中的applicationId</strong><br>
把<code>Module</code>下的<code>build.gradle-defaultConfig</code>中的<code>applicationId</code>给注释掉.</p>
<pre><code class="language-java">    defaultConfig {
     // applicationId &quot;com.dohenes.login&quot;
     ...
    }
</code></pre>
</li>
<li>
<p><strong>修改<code>AndroidManifest.xml</code></strong></p>
<ul>
<li>注释<code>AndroidManifest.xml</code>中的<code>applicationId</code>(如果没有请忽略）</li>
<li>修改<code>application</code>标签为：<pre><code class="language-java">&lt;application
    android:allowBackup=&quot;true&quot;
    android:supportsRtl=&quot;true&quot;&gt;
</code></pre>
</li>
<li>注释配置的启动action<pre><code class="language-java">    &lt;intent-filter&gt;
        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
    &lt;/intent-filter&gt;
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>如果自定义了Application，需要去除，aar中是没有Application的</strong></p>
</li>
<li>
<p><strong>如果aar中有需要在Application中初始化的代码该怎么办？</strong><br>
可以写一个<code>init</code>方法或者单独写一个类，对外开放一个<code>init</code>方法让使用者传入<code>Application</code>过来即可。<br>
示例：</p>
<pre><code class="language-java">public void init(Application application) {
    // 在这里写在Application中需要初始化的代码
}
</code></pre>
</li>
<li>
<p><strong>修改完毕后直接Build-&gt;Make Module app就可以正常生产aar了，也可以点击AndroidStudio右侧的Gradle-&gt;app-&gt;Tasks-&gt;Build-&gt;assemble，生成的aar文件在app的build-&gt;outputs-&gt;aar目录下</strong><br>
<code>Build-&gt;Make Module app</code>方式生成的<code>aar</code>文件是根据配置的编译环境打包对应的<code>aar</code>包，可以通过<code>Build Variants</code> -&gt;修改<code>Module</code>的<code>active build variant</code>来切换。<br>
<img src="https://jgduan.github.io//post-images/1613703647523.png" alt="" loading="lazy"></p>
</li>
</ol>
<hr>
<h1 id="二-新建module打包aar">二、新建Module打包aar</h1>
<ol>
<li><strong>在Project下新建一个Library Module</strong><br>
<img src="https://jgduan.github.io//post-images/1613703576824.png" alt="" loading="lazy"></li>
<li><strong>在Module中添加需要打包的资源</strong></li>
<li><strong>选中Module，点击Build-&gt;Make Module 'xxx'（xxx是你的Module名）就可以正常生产aar了，生成的aar文件在module的build-&gt;outputs-&gt;aar目录下</strong><br>
<img src="https://jgduan.github.io//post-images/1613703532599.png" alt="" loading="lazy"></li>
</ol>
<hr>
<h1 id="三-如何引用aar">三、如何引用aar</h1>
<ol>
<li>
<p><strong>将aar文件复制到目标项目的app/libs目录下</strong><br>
<img src="https://jgduan.github.io//post-images/1613703751689.png" alt="" loading="lazy"></p>
</li>
<li>
<p><strong>在目标项目的app/build.gradle文件中，添加如下内容：</strong></p>
<pre><code class="language-java">repositories {
 flatDir {
     dirs 'libs' //this way we can find the .aar file in libs folder
 }
}
</code></pre>
</li>
<li>
<p><strong>在dependencies中添加对应的依赖引用即可</strong></p>
<pre><code class="language-java">implementation(name: 'xxx', ext: 'aar')// xxx为lib名
</code></pre>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】八、有理数的乘法]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-ba-you-li-shu-de-cheng-fa/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-ba-you-li-shu-de-cheng-fa/">
        </link>
        <updated>2021-01-19T08:29:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="学习目标">学习目标</h1>
<ol>
<li><strong>掌握有理数的乘法法则，了解有理数的乘法法则的合理性；</strong></li>
<li><strong>熟练的进行有理数乘法运算；</strong></li>
<li><strong>能够利用有理数的乘法法则进行简单计算；</strong></li>
<li><strong>能够利用有理数的运算规律进行简便运算。</strong></li>
</ol>
<hr>
<h1 id="一-有理数乘法的规律">一、有理数乘法的规律</h1>
<p>例子：</p>
<ul>
<li>2 x 3 = 6</li>
<li>(-2) x 3 = -6</li>
<li>2 x (-3) = -6</li>
<li>(-2) x (-3) = 6</li>
<li>2 x 0 = 0</li>
<li>1/2 * 2 = 1</li>
</ul>
<p>结合上述例子得出以下结论：</p>
<ol>
<li><strong>两个正数相乘，结果为正数；</strong></li>
<li><strong>两个负数相乘，结果为正数；</strong></li>
<li><strong>一正一负相乘，结果为负数；</strong></li>
<li><strong>被乘数或者乘数为0时，结果是0；</strong></li>
<li><strong>乘积是1的两个数互为倒数。</strong></li>
</ol>
<blockquote>
<p>两数相乘，同号得正，异号得负，并把绝对值相乘。<br>
任何数同0相乘，都得0。<br>
注意：有理数相乘，先确定积的符号，再确定积的值。</p>
</blockquote>
<hr>
<h1 id="二-有理数乘积的符号">二、有理数乘积的符号</h1>
<p>例：观察下列各式，它们的积是正的还是负的？多个不等于0的有理数相乘，积的符号与负因数的个数有什么关系？</p>
<ol>
<li>(-1) x 2 x 3 x 4<br>
解： (-1) x 2 x 3 x 4 = - 24</li>
<li>(-1) x (-2) x 3 x 4<br>
解：(-1) x (-2) x 3 x 4 = 24</li>
<li>(-1) x (-2) x (-3) x 4<br>
解：(-1) x (-2) x (-3) x 4 = -24</li>
<li>(-1) x (-2) x (-3) x (-4)<br>
解：(-1) x (-2) x (-3) x (-4) = 24</li>
<li>(-1) x (-2) x (-3) x (-4) x 0<br>
解：(-1) x (-2) x (-3) x (-4) x 0 = 0</li>
</ol>
<p>结论：几个不等于0的因数相乘，积的符号由<strong>负因数</strong>的个数决定。当负因数有<strong>奇数</strong>个时，积的符号为<strong>负</strong>；当负因数有<strong>偶数</strong>个时，积的符号为<strong>正</strong>；只要有一个因数为0，积就为0。</p>
<blockquote>
<p>因数是指整数a除以整数b(b≠0) 的商正好是整数而没有余数，我们就说b是a的因数。</p>
</blockquote>
<hr>
<h1 id="三-有理数乘法的运算规律">三、有理数乘法的运算规律</h1>
<p>请验证下面3个等式都是成立的：</p>
<ol>
<li>5 x (-6) = (-6) x 5<br>
解：5 x (-6) = -30，(-6) x 5 = -30，两者结果相等。</li>
<li>[3 x (-4)] x (-5) = 3 x [(-4) x (-5)]<br>
解：[3 x (-4)] x (-5) = 60，3 x [(-4) x (-5)] = 60，两者结果相等。</li>
<li>5 x [3 + (-7)] = 5 x 3 + 5 x (-7)<br>
解：5 x [3 + (-7)]  = -20，5 x 3 + 5 x (-7) = -20，两者结果相等。</li>
</ol>
<p>从上面的等式中，你能总结出来什么？<br>
<strong>有理数的运算规律：</strong></p>
<ol>
<li>乘法交换律：ab = ba（两个数相乘，交换因数的位置，积相等），如：2 x 3 = 3 x 2；<br>
a x b可以记作a·b，也可以记作ab，即 a x b = a·b = ab。</li>
<li>乘法的结合律：(ab)c = a(bc)，如：(2 x 3) x 4 = 2 x (3 x 4)；<br>
三个数相乘，先把前两个数相乘，或者先把后两个数相乘，积相等。</li>
<li>乘法的分配律：a(b + c) = ab + ac，例如：2 x (3 + 4) = (2 x 3) + (2 x 4)。<br>
一个数同两个数的和相乘，等于把这个数分别同两个数相乘，再把积相加。</li>
</ol>
<hr>
<h1 id="四-例题计算">四、例题计算</h1>
<ol>
<li><strong>例1</strong><br>
计算：12 x 25 x (-1/3) x (-1/50)<br>
解1：12 x 25 x (-1/3) x (-1/50)<br>
= [12 x (-1/3)] x [25 x (-1/50)]<br>
= -4 x (-1/2)<br>
= 2<br>
解2：12 x 25 x (-1/3) x (-1/50)<br>
= 12 x 25 x 1/3 x 1/50<br>
= (12 x 1/3) x (25 x 1/50)<br>
= 4 x 1/2<br>
= 2</li>
<li><strong>例2</strong><br>
计算：(-85) x (-25) x (-4)<br>
= -85 x (25 x 4)<br>
= -85 x 100<br>
= -8500<br>
计算：(-7/8) x 15 x (-1/7)<br>
= (7/8 x 1/7) x 15<br>
= 1/8 x 15<br>
= 1又7/8</li>
</ol>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】七、有理数的减法]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-qi-you-li-shu-de-jian-fa/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-qi-you-li-shu-de-jian-fa/">
        </link>
        <updated>2021-01-19T03:17:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="学习目标">学习目标</h1>
<ol>
<li><strong>理解掌握有理数的减法法则；</strong></li>
<li><strong>会进行有理数的减法运算；</strong></li>
<li><strong>能够把有理数的减法运算转化为加法运算，进而写成省略括号和加号的和的形式。</strong></li>
</ol>
<hr>
<h1 id="一-样例计算">一、样例计算</h1>
<ol>
<li>4 - 2 = 2; 4 + (-2) = 2;</li>
<li>4 -1 = 3; 4 + (-1) = 3;</li>
<li>4 - 5 = -1; 4 + (-5) = -1.</li>
<li>4 - 0 = 4; 4 + 0 = 4;</li>
<li>4 - (-1) = 5; 4 + 1 = 5;</li>
<li>4 - (-2) = 6; 4 + 2 = 6.</li>
</ol>
<p><strong>通过以上运算，得出结论：减去一个数，等于加上这个数的相反数，也可以表示为：a - b = a + (-b)。</strong></p>
<blockquote>
<p>注意：减法在运算时<strong>有2个要素要发生变化。</strong><br>
1.减号变成加号；<br>
2.减数变成相反数；<br>
如：a - b = a + (-b)。</p>
</blockquote>
<hr>
<h1 id="二-例题">二、例题</h1>
<ol>
<li>计算 (-20) + (+3) - (-5) - (+7)<br>
解： (-20) + (+3) - (-5) - (+7)<br>
= (-20) + (+3) + (+5) + (-7)<br>
= [(+3) + (+5)] + [(-20) + (-7)]<br>
= (+8) + (-27)<br>
= -19</li>
<li>计算(-72) - (-37) - (-22) - 17<br>
解：(-72) - (-37) - (-22) - 17<br>
= (-72) + (+37) + (+22) + (-17)<br>
= [(-72) + (-17)] + [(+37) + (+22)]<br>
= -89 + (+59)<br>
= -30</li>
</ol>
<hr>
<h1 id="三-有理数的减法省略括号和加号">三、有理数的减法——省略括号和加号</h1>
<p>例子：一架飞机在进行特技表演，起飞后的高度变化如下：</p>
<ol>
<li>上升4.5千米，记作+4.5千米；</li>
<li>下降3.2千米，记作-3.2千米；</li>
<li>上升1.1千米，记作+1.1千米；</li>
<li>下降1.4千米，记作-1.4千米。<br>
问，此时飞机比起飞点高了多少千米？</li>
</ol>
<p>解法1：<br>
+4.5 + (-3.2) + (+1.1) + (-1.4)<br>
= [(+4.5) + (+1.1)] + [(-3.2) + (-1.4)]<br>
= +5.6 + (-4.6)<br>
= 1</p>
<p>解法2：<br>
4.5 - 3.2 + 1.1 -1.4<br>
= 1.3 + 1.1 - 1.4<br>
= 2.4 - 1.4<br>
= 1</p>
<p><strong>解法2对比解法1，省略了加号和括号，两者的计算结果是一致的，但解法2看起来更简单明了一点。</strong><br>
在这里，我们把4.5 - 3.2 + 1.1 - 1.4看作为4.5，-3.2，1.1，-1.4的和，也叫<strong>代数和</strong>。</p>
<blockquote>
<p><strong>代数和</strong>是指两个或更多的数或量按照代数加法规律取符号(如 +或-)的总和。</p>
</blockquote>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】六、有理数的加法]]></title>
        <id>https://jgduan.github.io/post/you-li-shu/</id>
        <link href="https://jgduan.github.io/post/you-li-shu/">
        </link>
        <updated>2021-01-18T09:18:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-有理数的加法">一、有理数的加法</h1>
<ul>
<li>
<p><strong>同号的两个有理数相加，取相同的符号，并把 <em>绝对值</em> 相加。</strong></p>
<blockquote>
<p>例如：+3 + +4 = 7；-3 + -4 = -7.</p>
</blockquote>
</li>
<li>
<p><strong>符号不同的两个有理数相加，若绝对值不相等的情况下，取绝对值较大的数的符号，并用 <em>绝对值</em> 大的数取减去<em>绝对值</em>小的获取结果。</strong></p>
<blockquote>
<p>例如：+7 + -3 = +4；-7 + +4 = -3.</p>
</blockquote>
</li>
<li>
<p><strong>符号不同的两个有理数相加，若两数绝对值相等，则结果为0。</strong></p>
<blockquote>
<p>例如：+2 + -2 = 0.</p>
</blockquote>
</li>
<li>
<p><strong>一个数同0相加，结果仍然是这个数。</strong></p>
<blockquote>
<p>例如：-2 + 0 = -2；+2 + 0 = +2.</p>
</blockquote>
</li>
</ul>
<hr>
<h1 id="二-有理数加法的交换律-结合律">二、有理数加法的交换律、结合律</h1>
<blockquote>
<p>有理数运算中，加法的交换律与结合律仍适用。</p>
</blockquote>
<ul>
<li><strong>加法交换律</strong><br>
两个数相加，交换加数的位置，和不变。<br>
例如：a + b = b + a。</li>
<li><strong>加法结合律</strong><br>
三个数相加，先把前两个数相加，或者先把后两个数相加，和不变。<br>
例如：(a + b) + c = a + (b + c)。</li>
</ul>
<blockquote>
<p>一般的，任意若干个数相加，无论各数相加的先后次序如何，其和不变。</p>
</blockquote>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】五、绝对值]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-wu-jue-dui-zhi/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-wu-jue-dui-zhi/">
        </link>
        <updated>2021-01-14T09:01:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="学习目标">学习目标</h1>
<ol>
<li><strong>理解绝对值的概念及其几何意义；</strong></li>
<li><strong>会求一个数的绝对值；</strong></li>
<li><strong>了解绝对值的非负性，并能用其非负性解决相关问题；</strong></li>
<li><strong>进一步理解绝对值的代数意义和几何意义；</strong></li>
<li><strong>会用数轴或绝对值比较两个有理数的大小。</strong></li>
</ol>
<hr>
<h1 id="一-绝对值">一、绝对值</h1>
<ul>
<li><strong>绝对值的定义</strong><br>
一般地，数轴上表示数a的点与原点的距离叫做数a的绝对值。<br>
其中a可以是负数、正数和0。
<ul>
<li>正数的绝对值是其本身；</li>
<li>负数的绝对值是其相反数；</li>
<li>0的绝对值还是0.</li>
</ul>
</li>
<li><strong>绝对值的表示</strong><br>
数a的绝对值，记作：| a |.<br>
例如：-8的绝对值是8，记作：| -8 | = 8.</li>
<li><strong>互为相反数的两个数，它们的绝对值有什么关系？</strong><br>
互为相反数的的两个数，它们的绝对值是相等的。</li>
</ul>
<blockquote>
<p>两个正数，绝对值大的大；<br>
两个负数，绝对值大的反而小。</p>
</blockquote>
<hr>
<h1 id="二-有理数大小的比较">二、有理数大小的比较</h1>
<ol>
<li><strong>一个数与0比较，要考虑这个数的正负</strong><br>
一个数与0比较，正数大于0，负数小于0。</li>
<li><strong>异号两数比较，要考虑这两个数的正负</strong><br>
正数大于负数。</li>
<li><strong>同好两个数比较，要考虑这两个数的绝对值</strong><br>
两个正数，绝对值大的大；两个负数，绝对值大的反而小。</li>
<li><strong>多个有理数比较，适合用数轴</strong><br>
数轴上的点表示的数左边的小，右边的大。<br>
注意：需要简化时，要先简化再比较。</li>
</ol>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】四、相反数]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-si-xiang-fan-shu/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-si-xiang-fan-shu/">
        </link>
        <updated>2021-01-14T08:42:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="学习目标">学习目标</h1>
<ol>
<li><strong>借助数轴了解相反数的概念；</strong></li>
<li><strong>知道互为相反数的两个数在数轴上的位置，能求一个数的相反数；</strong></li>
<li><strong>根据相反数的定义解决相关问题。</strong></li>
</ol>
<hr>
<h1 id="一-新课讲解">一、新课讲解</h1>
<ol>
<li>
<p><strong>观察这两个数，有什么相同和不同？</strong><br>
<strong>+5     -5</strong></p>
<ul>
<li>相同点<br>
数字相同</li>
<li>不同点<br>
符号不同</li>
</ul>
<p>归纳：一般地，设a是一个正整数，数轴上与原点的距离是a的点有两个，它们分别在原点左右，表示-a和a，我们就说这两点关于原点对称。</p>
</li>
</ol>
<hr>
<h1 id="二-相反数">二、相反数</h1>
<ol>
<li><strong>什么叫相反数？</strong><br>
像2和-2，5和-5这样，只有符号不同的两个数叫做互为<strong>相反数</strong>。<br>
一般地，a与-a互为相反数；特别地，0的相反数是0。
<blockquote>
<p>我们通常在一个数字前面添上“-”号，表示这个数的相反数。<br>
例如：-(-4) = 4，-(+5.5) = -5.5，-0 = 0。</p>
</blockquote>
</li>
</ol>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】三、数轴]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-san-shu-zhou/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-san-shu-zhou/">
        </link>
        <updated>2021-01-13T09:57:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="学习目标">学习目标</h1>
<ol>
<li><strong>掌握数轴的三要素，能够熟练画出数轴；</strong></li>
<li><strong>能够将已知的数在数轴上表示出来，能说出数轴上已知的点所表示的数。</strong></li>
</ol>
<hr>
<h1 id="一-什么是数轴">一、什么是数轴？</h1>
<blockquote>
<p>数轴，为一种特定几何图形。直线是由无数个点组成的集合，实数包括正实数、零、负实数也有无数个。正因为它们的这个共性，所以用直线上无数个点来表示实数。这时就用一条规定了原点、正方向和单位长度的直线来表示实数。规定右边为正方向时，在这条直线上的两个数，右边上点表示的数总大于左边上点表示的数，正数大于零，零大于负数。</p>
</blockquote>
<p><strong>数轴：人们通常用一条直线上的点表示数，这条直线叫做数轴。这条直线需要满足：</strong></p>
<ol>
<li><strong>在直线上任取一点表示数0，这个点叫做原点；</strong></li>
<li><strong>通常规定从直线上从原点向右（或向上）为正方向，从原点向左（或向下）为负方向；</strong></li>
<li><strong>选取适当的长度为<em>单位长度</em>，直线上从原点向右，每隔一个单位长度取一个点，以此表示1，2，3，4，5....；从原点向左，用类似方法依次表示-1，-2，-3...。</strong></li>
</ol>
<hr>
<h1 id="二-数轴的要素">二、数轴的要素</h1>
<p><strong>数轴包含以下三要素：</strong></p>
<ol>
<li><strong>原点</strong></li>
<li><strong>正方向</strong></li>
<li><strong>单位长度</strong></li>
</ol>
<hr>
<h1 id="三-画数轴的四个步骤">三、画数轴的四个步骤</h1>
<ol>
<li><strong>画直线；</strong></li>
<li><strong>在直线上取一点作为原点；</strong></li>
<li><strong>确定正方向，并用箭头表示；</strong></li>
<li><strong>根据需要，选取适当的单位长度。</strong></li>
</ol>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】二、有理数]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-er-you-li-shu/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-er-you-li-shu/">
        </link>
        <updated>2021-01-13T09:45:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>本文目的：</p>
<ol>
<li><strong>理解有理数的含义；</strong></li>
<li><strong>能够把给出的有理数正确分类；</strong></li>
<li><strong>了解0在有理数分类中的作用。</strong></li>
</ol>
<hr>
<h1 id="一-学过的数">一、学过的数</h1>
<p>我们学过的数有：</p>
<ul>
<li><strong>正整数</strong><br>
例如：1，2，3，4，5...</li>
<li><strong>零</strong><br>
0</li>
<li><strong>负整数</strong><br>
例如：-1，-2，-3，-4，-5...</li>
<li><strong>正分数</strong><br>
例如：1.1，12.91，5/2，3又3/4，17/3...</li>
<li><strong>负分数</strong><br>
例如：-7.5，-2/5，-3.25...</li>
</ul>
<hr>
<h1 id="二-有理数">二、有理数</h1>
<p><strong>什么是有理数？</strong></p>
<blockquote>
<p>有理数是整数（正整数、0、负整数）和分数的统称，是整数和分数的集合。</p>
</blockquote>
<p><strong>有理数的分类如下：</strong></p>
<ul>
<li>整数
<ul>
<li>正整数</li>
<li>零</li>
<li>负整数</li>
</ul>
</li>
<li>分数
<ul>
<li>正分数</li>
<li>负分数</li>
</ul>
</li>
</ul>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【初中数学】一、正数、负数]]></title>
        <id>https://jgduan.github.io/post/chu-zhong-shu-xue-yi-zheng-shu-fu-shu/</id>
        <link href="https://jgduan.github.io/post/chu-zhong-shu-xue-yi-zheng-shu-fu-shu/">
        </link>
        <updated>2021-01-13T02:33:38.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>由计数、排序，产生了数1，2，3，4....；<br>
由表示“没有”、“空位”，产生数0；<br>
由分物、测量产生分数1/2、1/3，...；<br>
在实际生活中，以温度计算为例，我们还需要通过一个特别的数——负数来表示正数所不能表述的数字。</p>
<hr>
<h1 id="一-正数">一、正数</h1>
<p>大于0的数，我们称之为负数。<br>
如：2.7%，3，5都是正数。</p>
<hr>
<h1 id="二-负数">二、负数</h1>
<p>小于0的数，我们称之为负数。<br>
如：-2.8%，-10，-1都是负数。</p>
<hr>
<h1 id="三-注意">三、注意</h1>
<p>** 0既不是正数，也不是负数。**<br>
<strong>在同一个问题中，分别用正数与负数来表示具有相反意义的量。</strong></p>
<hr>
<h1 id="四-例子">四、例子</h1>
<ul>
<li>
<p><strong>例子1：</strong><br>
一个月内，小明的体重增加了2kg，小华的体重减少了1kg，小强的体重没有变化，写出他们这个月的体重增长值。</p>
<blockquote>
<p>小明的体重增长了2kg；<br>
小华的体重增长了-1kg；<br>
小强的体重增长了0kg。</p>
</blockquote>
</li>
<li>
<p><strong>例子2：</strong><br>
读下列各数，并指出其中哪些是正数，哪些是负数：<br>
-1，2.5，0，+3/4，-2/7，-3.14，120，-1.732.</p>
<blockquote>
<p>正数：2.5，+3/4，120；<br>
负数：-1，-2/7，-3.14，-1.732.</p>
</blockquote>
</li>
<li>
<p><strong>例子3：</strong><br>
如果把一个物体向后移动5m记作-5m，那么这个物体又移动了+5m是什么意思？这时物体离它两次移动的前位置有多远？</p>
<blockquote>
<p>向后移动5m记作-5m，那么移动+5m应该是指<strong>向前移动了5m</strong>；<br>
这时物体离它两次移动前的位置距离为：<strong>-5m+5m=0m，表示物体又回到了原来的位置。</strong></p>
</blockquote>
</li>
</ul>
<hr>
<h1 id="五-小结">五、小结</h1>
<ol>
<li><strong>了解了数的扩充——源于生活需要引入负数；</strong></li>
<li><strong>理解正数、负数表示的意义；</strong></li>
<li><strong>会用正、负数表示具有相反意义的量。</strong></li>
</ol>
]]></content>
    </entry>
</feed>